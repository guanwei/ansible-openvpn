# Specify that we are a client and that we
# will be pulling certain config file directives
# from the server.
client

# Use the same setting as you are using on
# the server.
# On most systems, the VPN will not function
# unless you partially or fully disable
# the firewall for the TUN/TAP interface.
dev {{ openvpn_dev }}

# Are we connecting to a TCP or
# UDP server?  Use the same setting as
# on the server.
proto {{ openvpn_proto }}

# The hostname/IP and port of the server.
# You can have multiple remote entries
# to load balance between the servers.
remote {{ openvpn_host }} {{ openvpn_port }}

# Keep trying indefinitely to resolve the
# host name of the OpenVPN server.  Very useful
# on machines which are not permanently connected
# to the internet such as laptops.
resolv-retry infinite

# Most clients don't need to bind to
# a specific local port number.
nobind

# Try to preserve some state across restarts.
persist-key
persist-tun

# If you are connecting through an
# HTTP proxy to reach the actual OpenVPN
# server, put the proxy server/IP and
# port number here.  See the man page
# if your proxy server requires
# authentication.
;http-proxy-retry # retry on connection failures
{% if http_proxy is defined -%}
http-proxy {{ http_proxy.host }} {{ http_proxy.port }}
{% else -%}
;http-proxy [proxy server] [proxy port #]
{% endif %}

# SSL/TLS parms.
# See the server config file for more
# description.  It's best to use
# a separate .crt/.key file pair
# for each client.  A single ca
# file can be used for all clients.
ca ca.crt
cert {{ client }}.crt
key {{ client }}.key

# Verify server certificate by checking that the
# certicate has the correct key usage set.
# This is an important precaution to protect against
# a potential attack discussed here:
#  http://openvpn.net/howto.html#mitm
#
# To use this feature, you will need to generate
# your server certificates with the keyUsage set to
#   digitalSignature, keyEncipherment
# and the extendedKeyUsage to
#   serverAuth
# EasyRSA can do this for you.
remote-cert-tls server

# If a tls-auth key is used on the server
# then every client must also have the key.
tls-auth ta.key 1

# Select a cryptographic cipher.
# If the cipher option is used on the server
# then you must also specify it here.
# Note that v2.4 client/server will automatically
# negotiate AES-256-GCM in TLS mode.
# See also the ncp-cipher option in the manpage
cipher {{ openvpn_cipher }}

# Enable compression on the VPN link.
# Don't enable this unless it is also
# enabled in the server config file.
{% if openvpn_comp_lzo -%}
comp-lzo
{% else -%}
;comp-lzo
{% endif %}

# Set log file verbosity.
verb {{ openvpn_verb }}

{% for option in openvpn_client_options %}
{{ option }}
{% endfor %}